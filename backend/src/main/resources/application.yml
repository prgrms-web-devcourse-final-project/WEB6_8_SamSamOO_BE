spring:
  config:
    import: optional:file:.env[.properties]
  application:
    name: back
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}  # 기본 dev 환경
  output:
    ansi:
      enabled: always

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    properties:
      hibernate:
        use_sql_comments: true
        format_sql: true
        highlight_sql: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID}
            client-secret: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_SECRET}
            client-name: Kakao
            scope: profile_nickname, account_email
          naver:
            client-id: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_CLIENT_ID}
            client-secret: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_CLIENT_SECRET}
            client-name: Naver
            scope: profile, email
      provider:
        kakao:
          authorization-uri: https://kauth.kakao.com/oauth/authorize
          token-uri: https://kauth.kakao.com/oauth/token
          user-info-uri: https://kapi.kakao.com/v2/user/me
          user-name-attribute: id
        naver:
          authorization-uri: https://nid.naver.com/oauth2.0/authorize
          token-uri: https://nid.naver.com/oauth2.0/token
          user-info-uri: https://openapi.naver.com/v1/nid/me
          user-name-attribute: response

springdoc:
  default-produces-media-type: application/json;charset=UTF-8

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.hibernate: INFO
    com.ai.lawyer: DEBUG
custom:
  jwt:
    secretKey: ${CUSTOM_JWT_SECRET_KEY}
    accessToken:
      expirationSeconds: ${CUSTOM_JWT_ACCESS_TOKEN_EXPIRATION_SECONDS}
