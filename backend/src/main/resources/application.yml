server:
  forward-headers-strategy: framework
spring:
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.session.SessionAutoConfiguration

  config:
    import: optional:file:.env[.properties], classpath:system-prompt.yml, classpath:batch-pagsize.yml

  application:
    name: back

  profiles:
    active: ${SPRING_PROFILES_ACTIVE}  # 기본 dev 환경

  output:
    ansi:
      enabled: always

  mail:
    host: smtp.daum.net
    port: 465
    username: ${send_email_address}
    password: ${send_email_password}
    properties:
      mail:
        smtp:
          auth: true
          ssl:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
      auth-code-expiration-millis: 1800000

  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      chat:
        options:
          model: gpt-4.1-nano

    ollama:
      base-url: http://localhost:11434
      embedding:
        options:
          model: daynice/kure-v1:567m

    vectorstore:
      qdrant:
        host: ${SPRING_AI_VECTORSTORE_QDRANT_HOST}
        port: ${SPRING_AI_VECTORSTORE_QDRANT_PORT}
        collection-name: "legal_cases"
        vector-size: 1024

    chat:
      memory:
        repository:
          jdbc:
            initialize-schema: never

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}

    properties:
      hibernate:
        use_sql_comments: true
        format_sql: true
        highlight_sql: true
    defer-datasource-initialization: true

  h2:
    console:
      enabled: true
      path: /h2-console

  sql:
    init:
      mode: always

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID}
            client-secret: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_SECRET}
            client-name: Kakao
            redirect-uri: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - account_email
              - name
              - gender
              - birthyear
          naver:
            client-id: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_CLIENT_ID}
            client-secret: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_CLIENT_SECRET}
            client-name: Naver
            redirect-uri: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_NAVER_REDIRECT_URI}
            authorization-grant-type: authorization_code
            scope:
              - email
              - name
              - gender
              - age
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

springdoc:
  default-produces-media-type: application/json;charset=UTF-8

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.hibernate: INFO
    com.ai.lawyer: DEBUG

management:
  endpoints:
    web:
      base-path: /actuator            # 기본값이지만 명시
      exposure:
        include: health,info          # 필요시 metrics 등 추가
  endpoint:
    health:
      probes:
        enabled: true                 # /actuator/health/{liveness,readiness} 활성화
      show-details: never             # 프로브 용도면 never 권장(민감정보 차단)

custom:
  cors:
    allowed-origins: ${CUSTOM_CORS_ALLOWED_ORIGINS}
  jwt:
    secretKey: ${CUSTOM_JWT_SECRET_KEY}
    accessToken:
      expirationSeconds: ${CUSTOM_JWT_ACCESS_TOKEN_EXPIRATION_SECONDS}
  oauth2:
    redirect-url: ${CUSTOM_OAUTH2_REDIRECT_URL}
    failure-url: ${CUSTOM_OAUTH2_FAILURE_URL}
  frontend:
    url: ${CUSTOM_FRONTEND_URL}
